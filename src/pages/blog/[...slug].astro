---
import { useStoryblokApi } from "@storyblok/astro";
// @ts-ignore
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
// @ts-ignore
import BaseLayout from "../layouts/BaseLayout.astro";
// @ts-ignore
import parseUrl from "../utils/parseUrl";
// @ts-ignore
import isPreview from "../utils/isPreview";
// @ts-ignore
import generateStaticPaths from "../utils/generateStaticPaths";

// export async function getStaticPaths() {
//   const sbApi = useStoryblokApi();

//   const { data } = await sbApi.get("cdn/stories", {
//     content_type: "blogPost",
//     version: import.meta.env.DEV ? "draft" : "published",
//   });

//   const stories = Object.values(data.stories);

//   return stories.map((story) => {
//     return {
//       params: { slug: (story as any).slug },
//     };
//   });
// }

// const sbApi = useStoryblokApi();
// const { slug } = Astro.params;
// const { data } = await sbApi.get(`cdn/stories/blog/${slug}`, {
//   version: import.meta.env.DEV ? "draft" : "published",
// });

// const story = data.story;
export async function getStaticPaths() {
  //We have moved all the code to a generateStaticPaths() function.
  return await generateStaticPaths();
}
const params = Astro.params;
// @ts-ignore
let props = isPreview() ? parseUrl(params?.slug) : Astro.props;
const { slug, language, langSwitch } = props;
const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get(
  `cdn/stories/${slug === undefined ? "home" : slug}`,
  {
    version: isPreview() ? "draft" : "published",
    resolve_relations: ["popular-articles.articles"],
    language,
  }
);
const story = data.story;
---

<BaseLayout langSwitch={langSwitch} language={language}>
  <html lang="en">
    <head>
      <title>Storyblok & Astro</title>
    </head>
    <body>
      <StoryblokComponent blok={story.content} />
    </body>
  </html>
</BaseLayout>
